#V2
\nDEFINE FIELD pin ON super_secure_account TYPE int;
DEFINE FIELD min_length ON super_secure_account TYPE int;
DEFINE FIELD max_length ON super_secure_account TYPE int;
DEFINE FIELD industry ON super_secure_account TYPE int;
\nDEFINE FIELD account ON super_secure_account TYPE record(account);
\n-- Table SSO Accounts\nDEFINE TABLE sso_account SCHEMAFULL\n  PERMISSIONS FOR select, create, update, delete WHERE account.user = $auth.id;
\nDEFINE FIELD account ON sso_account TYPE record(account);
DEFINE FIELD sso ON sso_account TYPE record(institution);
/**\nInit script for setting up the SurrealDB database.\n*/\n\n// TODO: Define Indices for all tables, depending on whats needed\n\n-- Namespace and Database\nDEFINE NAMESPACE accounts;
USE NAMESPACE accounts;
DEFINE DATABASE dev;
USE DB dev;
\n-- Table User and Sessions\nDEFINE TABLE user SCHEMAFULL\n  PERMISSIONS FOR select, update, delete WHERE id = $auth.id;
\nDEFINE FIELD username ON user TYPE string;
DEFINE FIELD email ON user TYPE string\n  ASSERT string::is::email($value);
DEFINE FIELD password ON user TYPE string;
\nDEFINE INDEX email ON user FIELDS email UNIQUE;
DEFINE INDEX username ON user FIELDS username UNIQUE;
\nDEFINE SCOPE user SESSION 4w\n  SIGNIN (\n    SELECT *\n    FROM user\n    WHERE (email = $email or username = $username)\n      AND crypto::argon2::compare(password, $password)\n  )\n  SIGNUP (\n    CREATE user\n    CONTENT {\n      username: $username,\n      email: $email,\n      password: crypto::argon2::generate($password)\n    }\n  );
\n-- Table Institutions\nDEFINE TABLE institution SCHEMAFULL\n  PERMISSIONS FOR select, create, update, delete WHERE user = $auth.id;
\nDEFINE FIELD name ON institution TYPE string;
DEFINE FIELD is_sso ON institution TYPE bool DEFAULT false;
DEFINE FIELD alias ON institution TYPE array DEFAULT [];
DEFINE FIELD alias.* ON institution TYPE string;
DEFINE FIELD website ON institution TYPE option<string>;
\nDEFINE FIELD user ON institution TYPE record(user);
\n-- Table Buckets\nDEFINE TABLE bucket SCHEMAFULL\n  PERMISSIONS FOR select, create, update, delete WHERE user = $auth.id;
\nDEFINE FIELD name ON bucket TYPE string;
DEFINE FIELD color ON bucket TYPE string;
\nDEFINE FIELD user ON institution TYPE record(user);
\n-- Table TwoFactors\nDEFINE TABLE two_factor SCHEMAFULL\n  PERMISSIONS FOR select, create, update, delete WHERE user = $auth.id;
\nDEFINE FIELD name ON two_factor TYPE string;
DEFINE FIELD device ON two_factor TYPE string;
\nDEFINE FIELD user ON two_factor TYPE record(user);
\n-- Table Accounts\nDEFINE TABLE account SCHEMAFULL\n  PERMISSIONS FOR select, create, update, delete WHERE user = $auth.id;
\nDEFINE FIELD created_at ON account TYPE datetime DEFAULT time::now();
DEFINE FIELD identity ON account TYPE string;
DEFINE FIELD recovery ON account TYPE option<string>;
\nDEFINE FIELD user ON account TYPE record(user);
DEFINE FIELD bucket ON account TYPE option<record(bucket)>;
DEFINE FIELD two_factor ON account TYPE option<record(two_factor)>;
DEFINE FIELD institution ON account TYPE record(institution);
\n-- Table Secure Accounts\nDEFINE TABLE secure_account SCHEMAFULL\n  PERMISSIONS FOR select, create, update, delete WHERE account.user = $auth.id;
\nDEFINE FIELD industry ON secure_account TYPE int;
\nDEFINE FIELD account ON secure_account TYPE record(account);
\n-- Table Super Secure Accounts\nDEFINE TABLE super_secure_account SCHEMAFULL\n  PERMISSIONS FOR select, create, update, delete WHERE account.user = $auth.id;
\nDEFINE FIELD pin ON super_secure_account TYPE int;
DEFINE FIELD min_length ON super_secure_account TYPE int;
DEFINE FIELD max_length ON super_secure_account TYPE int;
DEFINE FIELD industry ON super_secure_account TYPE int;
\nDEFINE FIELD account ON super_secure_account TYPE record(account);
\n-- Table SSO Accounts\nDEFINE TABLE sso_account SCHEMAFULL\n  PERMISSIONS FOR select, create, update, delete WHERE account.user = $auth.id;
\nDEFINE FIELD account ON sso_account TYPE record(account);
DEFINE FIELD sso ON sso_account TYPE record(institution);
/**\nInit script for setting up the SurrealDB database.\n*/\n\n// TODO: Define Indices for all tables, depending on whats needed\n\n-- Namespace and Database\nDEFINE NAMESPACE accounts;
USE NAMESPACE accounts;
DEFINE DATABASE dev;
USE DB dev;
\n-- Table User and Sessions\nDEFINE TABLE user SCHEMAFULL\n  PERMISSIONS FOR select, update, delete WHERE id = $auth.id;
\nDEFINE FIELD username ON user TYPE string;
DEFINE FIELD email ON user TYPE string\n  ASSERT string::is::email($value);
DEFINE FIELD password ON user TYPE string;
\nDEFINE INDEX email ON user FIELDS email UNIQUE;
DEFINE INDEX username ON user FIELDS username UNIQUE;
\nDEFINE SCOPE user SESSION 4w\n  SIGNIN (\n    SELECT *\n    FROM user\n    WHERE (email = $email or username = $username)\n      AND crypto::argon2::compare(password, $password)\n  )\n  SIGNUP (\n    CREATE user\n    CONTENT {\n      username: $username,\n      email: $email,\n      password: crypto::argon2::generate($password)\n    }\n  );
\n-- Table Institutions\nDEFINE TABLE institution SCHEMAFULL\n  PERMISSIONS FOR select, create, update, delete WHERE user = $auth.id;
\nDEFINE FIELD name ON institution TYPE string;
DEFINE FIELD is_sso ON institution TYPE bool DEFAULT false;
DEFINE FIELD alias ON institution TYPE array DEFAULT [];
DEFINE FIELD alias.* ON institution TYPE string;
DEFINE FIELD website ON institution TYPE option<string>;
\nDEFINE FIELD user ON institution TYPE record(user);
\n-- Table Buckets\nDEFINE TABLE bucket SCHEMAFULL\n  PERMISSIONS FOR select, create, update, delete WHERE user = $auth.id;
\nDEFINE FIELD name ON bucket TYPE string;
DEFINE FIELD color ON bucket TYPE string;
\nDEFINE FIELD user ON institution TYPE record(user);
\n-- Table TwoFactors\nDEFINE TABLE two_factor SCHEMAFULL\n  PERMISSIONS FOR select, create, update, delete WHERE user = $auth.id;
\nDEFINE FIELD name ON two_factor TYPE string;
DEFINE FIELD device ON two_factor TYPE string;
\nDEFINE FIELD user ON two_factor TYPE record(user);
\n-- Table Accounts\nDEFINE TABLE account SCHEMAFULL\n  PERMISSIONS FOR select, create, update, delete WHERE user = $auth.id;
\nDEFINE FIELD created_at ON account TYPE datetime DEFAULT time::now();
DEFINE FIELD identity ON account TYPE string;
DEFINE FIELD recovery ON account TYPE option<string>;
\nDEFINE FIELD user ON account TYPE record(user);
DEFINE FIELD bucket ON account TYPE option<record(bucket)>;
DEFINE FIELD two_factor ON account TYPE option<record(two_factor)>;
DEFINE FIELD institution ON account TYPE record(institution);
\n-- Table Secure Accounts\nDEFINE TABLE secure_account SCHEMAFULL\n  PERMISSIONS FOR select, create, update, delete WHERE account.user = $auth.id;
\nDEFINE FIELD industry ON secure_account TYPE int;
\nDEFINE FIELD account ON secure_account TYPE record(account);
\n-- Table Super Secure Accounts\nDEFINE TABLE super_secure_account SCHEMAFULL\n  PERMISSIONS FOR select, create, update, delete WHERE account.user = $auth.id;
\nDEFINE FIELD pin ON super_secure_account TYPE int;
DEFINE FIELD min_length ON super_secure_account TYPE int;
DEFINE FIELD max_length ON super_secure_account TYPE int;
DEFINE FIELD industry ON super_secure_account TYPE int;
\nDEFINE FIELD account ON super_secure_account TYPE record(account);
\n-- Table SSO Accounts\nDEFINE TABLE sso_account SCHEMAFULL\n  PERMISSIONS FOR select, create, update, delete WHERE account.user = $auth.id;
\nDEFINE FIELD account ON sso_account TYPE record(account);
DEFINE FIELD sso ON sso_account TYPE record(institution);
