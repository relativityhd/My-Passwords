/* eslint-disable */
// This file was generated by [tauri-specta](https://github.com/oscartbeaumont/tauri-specta). Do not edit this file manually.

declare global {
    interface Window {
        __TAURI_INVOKE__<T>(cmd: string, args?: Record<string, unknown>): Promise<T>;
    }
}

// Function avoids 'window not defined' in SSR
const invoke = () => window.__TAURI_INVOKE__;

export function signin(identity: string, password: string, remember: boolean) {
    return invoke()<null>("signin", { identity,password,remember })
}

export function signup(email: string, username: string, password: string, remember: boolean) {
    return invoke()<null>("signup", { email,username,password,remember })
}

export function signout() {
    return invoke()<null>("signout")
}

export function isAuthenticated() {
    return invoke()<boolean>("is_authenticated")
}

export function isPinned() {
    return invoke()<boolean>("is_pinned")
}

export function storePin(newpin: number) {
    return invoke()<null>("store_pin", { newpin })
}

export function createBucket(bucketName: string, bucketColor: string) {
    return invoke()<string>("create_bucket", { bucketName,bucketColor })
}

export function getBuckets() {
    return invoke()<Bucket[]>("get_buckets")
}

export function deleteBucket(bucketId: string) {
    return invoke()<null>("delete_bucket", { bucketId })
}

export function search(searchTerm: string) {
    return invoke()<SearchResult[]>("search", { searchTerm })
}

export function searchBucket(searchTerm: string, bucketId: string) {
    return invoke()<SearchResult[]>("search_bucket", { searchTerm,bucketId })
}

export function secureLiveInput(institution: string, identity: string, industry: Industry) {
    return invoke()<string>("secure_live_input", { institution,identity,industry })
}

export function getSecurePassword(id: string) {
    return invoke()<string>("get_secure_password", { id })
}

export type Mode = "Secure" | "SuperSecure" | "LegacySecure" | "Sso"
export type Industry = "Tech" | "Games" | "Social" | "Finance" | "Shopping" | "Science" | "Other"
export type SearchResultBucket = { name: string; color: string }
export type SearchResult = { id: string; account_type: Mode; institution: string; identity: string; bucket: SearchResultBucket }
export type Bucket = { id: string; name: string; color: string; n: number }
